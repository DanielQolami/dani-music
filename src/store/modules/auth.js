/* eslint-disable max-len */
import { auth, usersCollection } from '@/includes/firebase';
import {
  createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, signOut,
} from 'firebase/auth';
import { doc, setDoc } from 'firebase/firestore';

export default {
  // namespaced: true,
  state: {
    authModalShow: false,
    userLoggedIn: false,
  },
  getters: {},
  mutations: {
    toggleAuthModal: (state) => {
      state.authModalShow = !state.authModalShow;
    },
    toggleAuth(state) {
      state.userLoggedIn = !state.userLoggedIn;
    },
  },
  actions: {
    async register({ commit }, payload) {
      const userCred = await createUserWithEmailAndPassword(
        auth,
        payload.email,
        payload.password,
      );
      /* await addDoc(usersCollection, {
        name: payload.name,
        email: payload.email,
        age: payload.age,
        country: payload.country,
      }); <this would add to usersCollection with a auto-generated id> */
      // Add a new document in collection 'users' with id generated by userCred request
      await setDoc(doc(usersCollection, userCred.user.uid), {
        name: payload.name,
        email: payload.email,
        age: payload.age,
        country: payload.country,
      });
      /* we didn't use try{} catch(){}, here. while it is not wrong to handle errors in an Action function, but now, we let components to handle it and have more flexibility in the app.
      so if you want, handle the errors for the requests in here. */

      // updating user's profile: profile name and img can be updated
      await updateProfile(userCred.user, {
        displayName: payload.name,
      });

      commit('toggleAuth');
    },
    async login({ commit }, payload) {
      await signInWithEmailAndPassword(auth, payload.email, payload.password);

      commit('toggleAuth');
    },
    init_login({ commit }) {
      const user = auth.currentUser;

      if (user) {
        commit('toggleAuth');
      }
    },
    async signout({ commit }) {
      await signOut(auth);

      commit('toggleAuth');
      /*
      if (payload.route.meta.requiresAuth) {
        payload.router.push({ name: 'home' });
      }
      */
    },
  },
};
